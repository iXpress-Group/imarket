{"ast":null,"code":"var optional = require('./optional'),\n    tough = optional('tough-cookie'),\n    Cookie = tough && tough.Cookie,\n    CookieJar = tough && tough.CookieJar;\n\nexports.parse = function (str) {\n  if (str && str.uri) str = str.uri;\n  if (typeof str !== 'string') throw new Error(\"The cookie function only accepts STRING as param\");\n\n  if (!Cookie) {\n    return null;\n  }\n\n  return Cookie.parse(str);\n}; // Adapt the sometimes-Async api of tough.CookieJar to our requirements\n\n\nfunction RequestJar() {\n  this._jar = new CookieJar();\n}\n\nRequestJar.prototype.setCookie = function (cookieOrStr, uri, options) {\n  return this._jar.setCookieSync(cookieOrStr, uri, options || {});\n};\n\nRequestJar.prototype.getCookieString = function (uri) {\n  return this._jar.getCookieStringSync(uri);\n};\n\nexports.jar = function () {\n  if (!CookieJar) {\n    // tough-cookie not loaded, return a stub object:\n    return {\n      setCookie: function () {},\n      getCookieString: function () {}\n    };\n  }\n\n  return new RequestJar();\n};","map":null,"metadata":{},"sourceType":"script"}