{"ast":null,"code":"// Load modules\n// Declare internals\nvar internals = {};\n\nexports.arrayToObject = function (source) {\n  var obj = {};\n\n  for (var i = 0, il = source.length; i < il; ++i) {\n    if (typeof source[i] !== 'undefined') {\n      obj[i] = source[i];\n    }\n  }\n\n  return obj;\n};\n\nexports.merge = function (target, source) {\n  if (!source) {\n    return target;\n  }\n\n  if (typeof source !== 'object') {\n    if (Array.isArray(target)) {\n      target.push(source);\n    } else {\n      target[source] = true;\n    }\n\n    return target;\n  }\n\n  if (typeof target !== 'object') {\n    target = [target].concat(source);\n    return target;\n  }\n\n  if (Array.isArray(target) && !Array.isArray(source)) {\n    target = exports.arrayToObject(target);\n  }\n\n  var keys = Object.keys(source);\n\n  for (var k = 0, kl = keys.length; k < kl; ++k) {\n    var key = keys[k];\n    var value = source[key];\n\n    if (!target[key]) {\n      target[key] = value;\n    } else {\n      target[key] = exports.merge(target[key], value);\n    }\n  }\n\n  return target;\n};\n\nexports.decode = function (str) {\n  try {\n    return decodeURIComponent(str.replace(/\\+/g, ' '));\n  } catch (e) {\n    return str;\n  }\n};\n\nexports.compact = function (obj, refs) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n\n  refs = refs || [];\n  var lookup = refs.indexOf(obj);\n\n  if (lookup !== -1) {\n    return refs[lookup];\n  }\n\n  refs.push(obj);\n\n  if (Array.isArray(obj)) {\n    var compacted = [];\n\n    for (var i = 0, il = obj.length; i < il; ++i) {\n      if (typeof obj[i] !== 'undefined') {\n        compacted.push(obj[i]);\n      }\n    }\n\n    return compacted;\n  }\n\n  var keys = Object.keys(obj);\n\n  for (i = 0, il = keys.length; i < il; ++i) {\n    var key = keys[i];\n    obj[key] = exports.compact(obj[key], refs);\n  }\n\n  return obj;\n};\n\nexports.isRegExp = function (obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n  if (obj === null || typeof obj === 'undefined') {\n    return false;\n  }\n\n  return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};","map":null,"metadata":{},"sourceType":"script"}