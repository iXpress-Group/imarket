{"ast":null,"code":"'use strict';\n\nconst request = require('request');\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nconst onError = (err, done) => {\n  if (done) {\n    return done(err);\n  }\n\n  throw err;\n};\n\nconst downloader = (options = {}) => {\n  if (!options.url) {\n    throw new Error('The option url is required');\n  }\n\n  if (!options.dest) {\n    throw new Error('The option dest is required');\n  }\n\n  options = Object.assign({}, options);\n  const done = options.done;\n  delete options.done;\n  options.encoding = null;\n  request(options, (err, res, body) => {\n    if (err) {\n      return onError(err, done);\n    }\n\n    if (body && (res.statusCode === 200 || res.statusCode === 201)) {\n      if (!path.extname(options.dest)) {\n        const url = require('url');\n\n        const pathname = url.parse(options.url).pathname;\n        options.dest = path.join(options.dest, path.basename(pathname));\n      }\n\n      fs.writeFile(options.dest, body, 'binary', err => {\n        if (err) {\n          return onError(err, done);\n        }\n\n        if (typeof done === 'function') {\n          done(false, options.dest, body);\n        }\n      });\n    } else {\n      if (!body) {\n        return onError(new Error(\"Image loading error - empty body. URL: \".concat(options.url)), done);\n      }\n\n      onError(new Error(\"Image loading error - \".concat(res.statusCode, \". URL: \").concat(options.url)), done);\n    }\n  });\n};\n\ndownloader.image = (options = {}) => new Promise((resolve, reject) => {\n  options.done = (err, dest, body) => {\n    if (err) {\n      return reject(err);\n    }\n\n    resolve({\n      filename: dest,\n      image: body\n    });\n  };\n\n  downloader(options);\n});\n\nmodule.exports = downloader;","map":null,"metadata":{},"sourceType":"script"}