{"ast":null,"code":"var _jsxFileName = \"/home/engineersticity/Desktop/imarket/src/components/img_upload.js\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent'; // import './App.css';\n\nimport classNames from \"classnames\";\nconst CLOUDINARY_UPLOAD_PRESET = 'obnakovv';\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/engineersticity/image/upload';\n\nclass ImgUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onImageDrop = files => {\n      this.setState({\n        uploadedFile: files[0]\n      });\n      this.handleImageUpload(files[0]);\n    };\n\n    this.handleImageUpload = file => {\n      let upload = request.post(CLOUDINARY_UPLOAD_URL).field('upload_preset', CLOUDINARY_UPLOAD_PRESET).field('file', file);\n      upload.end((err, response) => {\n        if (err) {\n          console.error(err);\n        }\n\n        if (response.body.secure_url !== '') {\n          this.setState({\n            uploadedFileCloudinaryUrl: response.body.secure_url\n          });\n        }\n      });\n    };\n\n    this.state = {\n      uploadedFile: null,\n      uploadedFileCloudinaryUrl: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"FileUpload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: this.onImageDrop.bind(this),\n      multiple: false,\n      accept: \"image/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive\n    }) => {\n      return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n        className: classNames(\"dropzone\", {\n          \"dropzone--isActive\": isDragActive\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), isDragActive ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Drop files here...\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Try dropping some files here, or click to select files to upload.\"));\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.uploadedFileCloudinaryUrl === '' ? null : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.uploadedFile.name), React.createElement(\"img\", {\n      src: this.state.uploadedFileCloudinaryUrl,\n      alt: '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: this.state.uploadedFileCloudinaryUrl,\n      download: this.state.uploadedFile.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" Download to file\"))));\n  }\n\n}\n\nexport default ImgUpload;","map":{"version":3,"sources":["/home/engineersticity/Desktop/imarket/src/components/img_upload.js"],"names":["React","Dropzone","request","classNames","CLOUDINARY_UPLOAD_PRESET","CLOUDINARY_UPLOAD_URL","ImgUpload","Component","constructor","props","onImageDrop","files","setState","uploadedFile","handleImageUpload","file","upload","post","field","end","err","response","console","error","body","secure_url","uploadedFileCloudinaryUrl","state","render","bind","getRootProps","getInputProps","isDragActive","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\n// import './App.css';\nimport classNames from \"classnames\";\n\nconst CLOUDINARY_UPLOAD_PRESET = 'obnakovv';\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/engineersticity/image/upload';\n\nclass ImgUpload extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uploadedFile: null,\n            uploadedFileCloudinaryUrl: ''\n        };\n    }\n\n    onImageDrop = (files) => {\n        this.setState({\n            uploadedFile: files[0]\n        });\n\n        this.handleImageUpload(files[0]);\n    };\n\n    handleImageUpload = (file) => {\n        let upload = request.post(CLOUDINARY_UPLOAD_URL)\n            .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\n            .field('file', file);\n\n        upload.end((err, response) => {\n            if (err) {\n                console.error(err);\n            }\n\n            if (response.body.secure_url !== '') {\n                this.setState({\n                    uploadedFileCloudinaryUrl: response.body.secure_url\n                });\n            }\n        });\n    };\n\n    render() {\n        return (\n            <form>\n                <div className=\"FileUpload\">\n                    <Dropzone\n                        onDrop={this.onImageDrop.bind(this)}\n                        multiple={false}\n                        accept=\"image/*\">\n                        {({getRootProps, getInputProps, isDragActive}) => {\n                            return (\n                                <div\n                                    {...getRootProps()}\n                                    className={classNames(\"dropzone\", {\n                                        \"dropzone--isActive\": isDragActive\n                                    })}\n                                >\n                                    <input {...getInputProps()} />\n                                    {isDragActive ? (\n                                        <p>Drop files here...</p>\n                                    ) : (\n                                        <p>\n                                            Try dropping some files here, or click to select files to\n                                            upload.\n                                        </p>\n                                    )}\n                                </div>\n                            );\n                        }}\n                    </Dropzone>\n                </div>\n\n                <div>\n                    {this.state.uploadedFileCloudinaryUrl === '' ? null :\n                        <div>\n                            <p>{this.state.uploadedFile.name}</p>\n                            <img src={this.state.uploadedFileCloudinaryUrl} alt={''}/>\n                            <a href={this.state.uploadedFileCloudinaryUrl}\n                               download={this.state.uploadedFile.name}> Download to file\n\n                            </a>\n\n                            {/*<a href=\"http://.../bad-romance.mp3\" download=\"Bad Romance.mp3\">Save \"Bad Romance\" to your computer</a>*/}\n                        </div>}\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default ImgUpload;"]},"metadata":{},"sourceType":"module"}