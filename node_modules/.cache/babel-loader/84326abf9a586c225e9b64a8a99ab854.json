{"ast":null,"code":"var _jsxFileName = \"/home/engineersticity/Desktop/imarket/src/pages/Login.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\nimport CustomLayout from '../components/Layout';\nconst FormItem = Form.Item;\nconst antIcon = React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n});\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.onAuth(values.userName, values.password);\n          this.props.history.push('/');\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.error.message);\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(CustomLayout, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, errorMessage, this.props.loading ? React.createElement(Spin, {\n      indicator: antIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }) : React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, getFieldDecorator('userName', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Login\"), \"Or\", React.createElement(NavLink, {\n      style: {\n        marginRight: '10px'\n      },\n      to: \"/signup/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" signup\"))))));\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create()(Login);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error,\n    isAuthenticated: state.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password)),\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","map":{"version":3,"sources":["/home/engineersticity/Desktop/imarket/src/pages/Login.js"],"names":["React","Form","Icon","Input","Button","Spin","connect","NavLink","actions","Header","Footer","CustomLayout","FormItem","Item","antIcon","fontSize","Login","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","onAuth","userName","password","history","push","componentDidMount","onTryAutoSignup","render","errorMessage","error","message","getFieldDecorator","loading","rules","required","color","marginRight","WrappedNormalLoginForm","create","mapStateToProps","state","isAuthenticated","token","mapDispatchToProps","dispatch","username","authLogin","authCheckState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Form, Icon, Input, Button, Spin} from 'antd';\nimport {connect} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport * as actions from '../store/actions/auth';\nimport Header from '../components/header';\nimport Footer from '../components/footer';\n\nimport CustomLayout from '../components/Layout';\n\nconst FormItem = Form.Item;\nconst antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin/>;\n\n\nclass Login extends React.Component {\n\n\n    componentDidMount() {\n        this.props.onTryAutoSignup();\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.onAuth(values.userName, values.password);\n                this.props.history.push('/');\n            }\n        });\n    };\n\n    render() {\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div>\n                <Header{...this.props}/>\n                <CustomLayout {...this.props}>\n                    <div>\n                        {errorMessage}\n                        {\n                            this.props.loading ?\n\n                                <Spin indicator={antIcon}/>\n\n                                :\n\n                                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                                    <FormItem>\n                                        {getFieldDecorator('userName', {\n                                            rules: [{required: true, message: 'Please input your username!'}],\n                                        })(\n                                            <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                                   placeholder=\"Username\"/>\n                                        )}\n                                    </FormItem>\n\n                                    <FormItem>\n                                        {getFieldDecorator('password', {\n                                            rules: [{required: true, message: 'Please input your Password!'}],\n                                        })(\n                                            <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                                   type=\"password\" placeholder=\"Password\"/>\n                                        )}\n                                    </FormItem>\n\n                                    <FormItem>\n                                        <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                                            Login\n                                        </Button>\n                                        Or\n                                        <NavLink\n                                            style={{marginRight: '10px'}}\n                                            to='/signup/'> signup\n                                        </NavLink>\n                                    </FormItem>\n                                </Form>\n                        }\n                    </div>\n                </CustomLayout>\n            </div>\n        );\n    }\n}\n\nconst WrappedNormalLoginForm = Form.create()(Login);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error,\n        isAuthenticated: state.token !== null\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)),\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);\n"]},"metadata":{},"sourceType":"module"}