{"ast":null,"code":"var _jsxFileName = \"/home/engineersticity/Desktop/imarket/src/components/img_upload.js\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent'; // import './App.css';\n\nconst CLOUDINARY_UPLOAD_PRESET = 'obnakovv';\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/engineersticity/image/upload';\n\nclass ImgUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadedFile: null,\n      uploadedFileCloudinaryUrl: ''\n    };\n  }\n\n  onImageDrop(files) {\n    this.setState({\n      uploadedFile: files[0]\n    });\n    this.handleImageUpload(files[0]);\n  }\n\n  handleImageUpload(file) {\n    let upload = request.post(CLOUDINARY_UPLOAD_URL).field('upload_preset', CLOUDINARY_UPLOAD_PRESET).field('file', file);\n    upload.end((err, response) => {\n      if (err) {\n        console.error(err);\n      }\n\n      if (response.body.secure_url !== '') {\n        this.setState({\n          uploadedFileCloudinaryUrl: response.body.secure_url\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"FileUpload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: this.onImageDrop.bind(this),\n      multiple: false,\n      accept: \"image/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Drop an image or click to select a file to upload.\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.uploadedFileCloudinaryUrl === '' ? null : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.uploadedFile.name), React.createElement(\"img\", {\n      src: this.state.uploadedFileCloudinaryUrl,\n      alt: '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ImgUpload;","map":{"version":3,"sources":["/home/engineersticity/Desktop/imarket/src/components/img_upload.js"],"names":["React","Dropzone","request","CLOUDINARY_UPLOAD_PRESET","CLOUDINARY_UPLOAD_URL","ImgUpload","Component","constructor","props","state","uploadedFile","uploadedFileCloudinaryUrl","onImageDrop","files","setState","handleImageUpload","file","upload","post","field","end","err","response","console","error","body","secure_url","render","bind","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CACA;;AAEA,MAAMC,wBAAwB,GAAG,UAAjC;AACA,MAAMC,qBAAqB,GAAG,8DAA9B;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,IADL;AAETC,MAAAA,yBAAyB,EAAE;AAFlB,KAAb;AAIH;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKC,QAAL,CAAc;AACVJ,MAAAA,YAAY,EAAEG,KAAK,CAAC,CAAD;AADT,KAAd;AAIA,SAAKE,iBAAL,CAAuBF,KAAK,CAAC,CAAD,CAA5B;AACH;;AAEDE,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AACpB,QAAIC,MAAM,GAAGf,OAAO,CAACgB,IAAR,CAAad,qBAAb,EACRe,KADQ,CACF,eADE,EACehB,wBADf,EAERgB,KAFQ,CAEF,MAFE,EAEMH,IAFN,CAAb;AAIAC,IAAAA,MAAM,CAACG,GAAP,CAAW,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAC1B,UAAID,GAAJ,EAAS;AACLE,QAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACH;;AAED,UAAIC,QAAQ,CAACG,IAAT,CAAcC,UAAd,KAA6B,EAAjC,EAAqC;AACjC,aAAKZ,QAAL,CAAc;AACVH,UAAAA,yBAAyB,EAAEW,QAAQ,CAACG,IAAT,CAAcC;AAD/B,SAAd;AAGH;AACJ,KAVD;AAWH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,MAAM,EAAE,KAAKf,WAAL,CAAiBgB,IAAjB,CAAsB,IAAtB,CADZ;AAEI,MAAA,QAAQ,EAAE,KAFd;AAGI,MAAA,MAAM,EAAC,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAJJ,CADJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnB,KAAL,CAAWE,yBAAX,KAAyC,EAAzC,GAA8C,IAA9C,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWC,YAAX,CAAwBmB,IAA5B,CADJ,EAEI;AAAK,MAAA,GAAG,EAAE,KAAKpB,KAAL,CAAWE,yBAArB;AAAiD,MAAA,GAAG,EAAE,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFR,CAVJ,CADJ;AAoBH;;AAzDmC;;AA4DxC,eAAeN,SAAf","sourcesContent":["import React from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\n// import './App.css';\n\nconst CLOUDINARY_UPLOAD_PRESET = 'obnakovv';\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/engineersticity/image/upload';\n\nclass ImgUpload extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uploadedFile: null,\n            uploadedFileCloudinaryUrl: ''\n        };\n    }\n\n    onImageDrop(files) {\n        this.setState({\n            uploadedFile: files[0]\n        });\n\n        this.handleImageUpload(files[0]);\n    }\n\n    handleImageUpload(file) {\n        let upload = request.post(CLOUDINARY_UPLOAD_URL)\n            .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\n            .field('file', file);\n\n        upload.end((err, response) => {\n            if (err) {\n                console.error(err);\n            }\n\n            if (response.body.secure_url !== '') {\n                this.setState({\n                    uploadedFileCloudinaryUrl: response.body.secure_url\n                });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <form>\n                <div className=\"FileUpload\">\n                    <Dropzone\n                        onDrop={this.onImageDrop.bind(this)}\n                        multiple={false}\n                        accept=\"image/*\">\n                        <div>Drop an image or click to select a file to upload.</div>\n                    </Dropzone>\n                </div>\n\n                <div>\n                    {this.state.uploadedFileCloudinaryUrl === '' ? null :\n                        <div>\n                            <p>{this.state.uploadedFile.name}</p>\n                            <img src={this.state.uploadedFileCloudinaryUrl}  alt={''}/>\n                        </div>}\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default ImgUpload;"]},"metadata":{},"sourceType":"module"}